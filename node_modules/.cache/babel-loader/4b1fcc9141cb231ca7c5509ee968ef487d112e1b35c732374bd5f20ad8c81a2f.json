{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Natu\\\\Documents\\\\GitHub\\\\New folder\\\\Serverless_app\\\\client\\\\src\\\\components\\\\EditTodo.tsx\";\nimport * as React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { getUploadUrl, uploadFile, patchTodo } from '../api/todos-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar UploadState;\n(function (UploadState) {\n  UploadState[UploadState[\"NoUpload\"] = 0] = \"NoUpload\";\n  UploadState[UploadState[\"FetchingPresignedUrl\"] = 1] = \"FetchingPresignedUrl\";\n  UploadState[UploadState[\"UploadingFile\"] = 2] = \"UploadingFile\";\n})(UploadState || (UploadState = {}));\nexport var EditTodo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(EditTodo, _React$PureComponent);\n  var _super = _createSuper(EditTodo);\n  function EditTodo() {\n    var _this;\n    _classCallCheck(this, EditTodo);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      file: undefined,\n      uploadState: UploadState.NoUpload\n    };\n    _this.handleFileChange = function (event) {\n      var files = event.target.files;\n      if (!files) return;\n      _this.setState({\n        file: files[0]\n      });\n    };\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        var currentTodo, uploadUrl, updatedTodo;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                currentTodo = _this.props.history.location.state.todo;\n                _context.prev = 2;\n                if (_this.state.file) {\n                  _context.next = 6;\n                  break;\n                }\n                alert('File should be selected');\n                return _context.abrupt(\"return\");\n              case 6:\n                _this.setUploadState(UploadState.FetchingPresignedUrl);\n                _context.next = 9;\n                return getUploadUrl(_this.props.auth.getIdToken(), _this.props.match.params.todoId);\n              case 9:\n                uploadUrl = _context.sent;\n                _this.setUploadState(UploadState.UploadingFile);\n                _context.next = 13;\n                return uploadFile(uploadUrl, _this.state.file);\n              case 13:\n                updatedTodo = _objectSpread(_objectSpread({}, currentTodo), {}, {\n                  attachmentUrl: \"https://serverless-todo-proj-4-images-dev.s3.amazonaws.com/\".concat(_this.props.match.params.todoId)\n                });\n                console.log('updated todo is ', {\n                  updatedTodo: updatedTodo\n                });\n                _context.next = 17;\n                return patchTodo(_this.props.auth.getIdToken(), _this.props.match.params.todoId, updatedTodo);\n              case 17:\n                alert('File was uploaded!');\n                _context.next = 23;\n                break;\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](2);\n                alert('Could not upload a file: ' + _context.t0.message);\n              case 23:\n                _context.prev = 23;\n                _this.setUploadState(UploadState.NoUpload);\n                return _context.finish(23);\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 20, 23, 26]]);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return _this;\n  }\n  _createClass(EditTodo, [{\n    key: \"setUploadState\",\n    value: function setUploadState(uploadState) {\n      this.setState({\n        uploadState: uploadState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log({\n        currentTodo: this.props.history.location.state.todo\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload new image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              placeholder: \"Image to upload\",\n              onChange: this.handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), this.renderButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.uploadState === UploadState.FetchingPresignedUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploading image metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), this.state.uploadState === UploadState.UploadingFile && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploading file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: this.state.uploadState !== UploadState.NoUpload,\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return EditTodo;\n}(React.PureComponent);","map":{"version":3,"names":["React","Form","Button","getUploadUrl","uploadFile","patchTodo","UploadState","EditTodo","state","file","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","preventDefault","currentTodo","props","history","location","todo","alert","setUploadState","FetchingPresignedUrl","auth","getIdToken","match","params","todoId","uploadUrl","UploadingFile","updatedTodo","attachmentUrl","console","log","message","renderButton","PureComponent"],"sources":["C:/Users/Natu/Documents/GitHub/New folder/Serverless_app/client/src/components/EditTodo.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile, patchTodo } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n  history: any\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n    const currentTodo = this.props.history.location.state.todo\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(\n        this.props.auth.getIdToken(),\n        this.props.match.params.todoId\n      )\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      const updatedTodo = {\n        ...currentTodo,\n        attachmentUrl: `https://serverless-todo-proj-4-images-dev.s3.amazonaws.com/${this.props.match.params.todoId}`\n      }\n      console.log('updated todo is ', { updatedTodo })\n      await patchTodo(\n        this.props.auth.getIdToken(),\n        this.props.match.params.todoId,\n        updatedTodo\n      )\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    console.log({ currentTodo: this.props.history.location.state.todo })\n\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && (\n          <p>Uploading image metadata</p>\n        )}\n        {this.state.uploadState === UploadState.UploadingFile && (\n          <p>Uploading file</p>\n        )}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}